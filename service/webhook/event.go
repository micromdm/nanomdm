// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package webhook

import "time"

// The "command and report results" (a.k.a. "Acknowledge" or "Connect") event.
// Represents the MDM command report from MDM enrollments.
type AcknowledgeEvent struct {
	// The command UUID parsed from the command report, if available.
	CommandUuid *string `json:"command_uuid,omitempty"`

	// The `EnrollmentID` of the MDM enrollment.
	EnrollmentId *EnrollmentID `json:"enrollment_id,omitempty"`

	// NanoMDM enrollment IDs.
	Ids *IDs `json:"ids,omitempty"`

	// The raw HTTP body of the MDM command report.
	RawPayload RawPayload `json:"raw_payload"`

	// The MDM status of the device. Can indicate command report status.
	Status string `json:"status"`

	// The `UDID` of the MDM device.
	Udid *UDID `json:"udid,omitempty"`

	// Query paramters of the command report MDM HTTP request.
	UrlParams map[string]string `json:"url_params,omitempty"`
}

// The MDM check-in event. The specific check-in type will be indicated in the
// event topic name as well as the `MessageType` key in the raw payload.
type CheckinEvent struct {
	// The `EnrollmentID` of the MDM enrollment.
	EnrollmentId *EnrollmentID `json:"enrollment_id,omitempty"`

	// NanoMDM enrollment IDs.
	Ids *IDs `json:"ids,omitempty"`

	// The raw HTTP body of the MDM command report.
	RawPayload RawPayload `json:"raw_payload"`

	// Count of how many `TokenUpdate` check-in messages have occured since device
	// enrollment. Primarily to differentiate an enrollment `TokenUpdate` vs. a
	// follow-up. Will only be present for a topic name of `mdm.TokenUpdate`.
	TokenUpdateTally *int `json:"token_update_tally,omitempty"`

	// The `UDID` of the MDM device.
	Udid *UDID `json:"udid,omitempty"`

	// Query paramters of the command report MDM HTTP request.
	UrlParams map[string]string `json:"url_params,omitempty"`
}

// An `EnrollmentID` of the MDM enrollment.
type EnrollmentID string

// MicroMDM webhook event
type EventJson struct {
	// If present, the MDM "command and report results" (a.k.a. "Acknowledge" or
	// "Connect") event. The topic name will be `mdm.Connect`.
	AcknowledgeEvent *AcknowledgeEvent `json:"acknowledge_event,omitempty"`

	// If present, the MDM check-in event.
	CheckinEvent *CheckinEvent `json:"checkin_event,omitempty"`

	// The date and time the event was created at.
	CreatedAt time.Time `json:"created_at"`

	// The unique identifier of the event.
	EventId *string `json:"event_id,omitempty"`

	// The topic name of the event.
	Topic EventJsonTopic `json:"topic"`
}

type EventJsonTopic string

const EventJsonTopicMdmAuthenticate EventJsonTopic = "mdm.Authenticate"
const EventJsonTopicMdmCheckOut EventJsonTopic = "mdm.CheckOut"
const EventJsonTopicMdmConnect EventJsonTopic = "mdm.Connect"
const EventJsonTopicMdmDeclarativeManagement EventJsonTopic = "mdm.DeclarativeManagement"
const EventJsonTopicMdmGetBootstrapToken EventJsonTopic = "mdm.GetBootstrapToken"
const EventJsonTopicMdmGetToken EventJsonTopic = "mdm.GetToken"
const EventJsonTopicMdmSetBootstrapToken EventJsonTopic = "mdm.SetBootstrapToken"
const EventJsonTopicMdmTokenUpdate EventJsonTopic = "mdm.TokenUpdate"
const EventJsonTopicMdmUserAuthenticate EventJsonTopic = "mdm.UserAuthenticate"

// NanoMDM enrollment IDs.
type IDs struct {
	// NanoMDM enrollment ID. See
	// https://github.com/micromdm/nanomdm/blob/main/docs/operations-guide.md#enrollment-ids
	// for details.
	Id string `json:"id"`

	// Parent Enrollment ID. In the case of a user channel enrollment the Parent ID
	// will be the device channel enrollment ID for the user user.
	ParentId *string `json:"parent_id,omitempty"`

	// Type of enrollment.
	Type IDsType `json:"type"`
}

type IDsType string

const IDsTypeDevice IDsType = "Device"
const IDsTypeSharedIPad IDsType = "Shared iPad"
const IDsTypeUser IDsType = "User"
const IDsTypeUserEnrollment IDsType = "User Enrollment"
const IDsTypeUserEnrollmentDevice IDsType = "User Enrollment (Device)"

// A raw HTTP body of an MDM request.
type RawPayload string

// A `UDID` identifier of the MDM enrollment.
type UDID string
