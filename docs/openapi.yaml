openapi: 3.0.0
info:
  version: 0.1.0
  title: NanoMDM API
servers:
  - url: http://[::1]:9000/
paths:
  /v1/pushcert:
    put:
      description: Upload APNs certificate and private key.
      security:
        - basicAuth: []
      requestBody:
        description: The request body includes the APNs certificate and private key in PEM-encoded format concatenated together *without* any wrapping or container formats like JSON. The private key must *not* be encrypted.
        required: true
        content:
          text/plain:
            schema:
              type: string
            example: |-
              -----BEGIN CERTIFICATE-----
              MIIFdjCCBF6gAwIBAgIIZ7SjAeWsGIwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV
              [..snip..]
              lL5jy74l8Za59w==
              -----END CERTIFICATE-----
              -----BEGIN RSA PRIVATE KEY-----
              MIIEogIBAAKCAQEAyfyVbzvN3t0RZgemV2YNGByPjIC3nAyMeabAg/xh/RlqS1uY
              [..snip..]
              ThmdpyJ76efnVCpgta/av0LZ6S9914MJpw2ff6H2Ou3y54Jy/94=
              -----END RSA PRIVATE KEY-----
      responses:
        '200':
          description: The topic, expiry, and/or any errors are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushCertResponse'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Error reading HTTP body from request
  /v1/push/{id*}:
    get:
      description: Send APNs push notifications to MDM enrollments
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/APIResultOK'
        '207':
          $ref: '#/components/responses/APIResultSomeFailed'
        '500':
          $ref: '#/components/responses/APIResultAllFailed'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
      parameters:
        - $ref: '#/components/parameters/idParam'
  /v1/enqueue/{id*}:
    put:
      description: Enqueue MDM commands to MDM enrollments and (optionally) send APNs push notifications
      security:
        - basicAuth: []
      requestBody:
        description: The request body is an XML-encoded MDM command plist.
        required: true
        content:
          text/plain:
            # Apple plists can't cleanly be represented in OpenAPI specification so we have to fake the Content-Type as text/plain.
            schema:
              type: string
            example: |-
              <?xml version="1.0" encoding="UTF-8"?>
              <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
              <plist version="1.0">
              <dict>
                <key>Command</key>
                <dict>
                  <key>RequestType</key>
                  <string>ProfileList</string>
                </dict>
                <key>CommandUUID</key>
                <string>fedd659e-fc3c-4e35-8bb1-c8f51ae542a5</string>
              </dict>
              </plist>
      responses:
        '200':
          $ref: '#/components/responses/APIResultOK'
        '207':
          $ref: '#/components/responses/APIResultSomeFailed'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description:  One of two modes. One mode is an error reading HTTP body from request (which will return no content nor content-type). Otherwise all enqueue requests failed. Returns JSON API response object including errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResult'
      parameters:
        - $ref: '#/components/parameters/idParam'
        - in: query
          name: nopush
          schema:
            type: string
            example: '1'
  /v1/queue/{id}:
    get:
      description: Retrieve queued MDM commands for a specific enrollment ID with pagination support
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: Enrollment ID of device- or user-channel enrollment. Typically a UUID-looking identifier.
          required: true
          schema:
            type: string
            example: '299BD49-1A0C-422C-B285-2E4FF087C673'
        - name: cursor
          in: query
          description: Pagination cursor for retrieving the next page of results. Omit or leave empty to start from the beginning.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of commands to retrieve per page.
          required: false
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully retrieved queued commands
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuedCommandsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Error retrieving queued commands
  /v1/queue/{id*}:
    delete:
      description: Clear all queued MDM commands for one or more enrollment IDs
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '204':
          description: Successfully cleared queued commands for all enrollment IDs
        '207':
          $ref: '#/components/responses/QueueAPIResultSomeFailed'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/QueueAPIResultAllFailed'
  /v1/escrowkeyunlock:
    post:
      description: "Perform an Escrow Key Unlock against Apple's API. Uses the APNs certificate of the provided topic for mTLS authentication. Note that despite all parameters being in the HTTP body (form) this endpoint moves the appropriate parameters to the URL query parameters per Apple's documentation. The response body, status, and headers are handed straight through from the Apple endpoint."
      externalDocs:
        description: Creating and Using Bypass Codes
        url: https://developer.apple.com/documentation/devicemanagement/creating-and-using-bypass-codes
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - topic
                - serial
                - productType
                - escrowKey
                - orgName
                - guid
              properties:
                topic:
                  type: string
                  description: APNs Push topic. The certificate keypair that matches this topic is used for mTLS authentication to the Apple Escrow Key Unlock endpoint.
                  example: "com.apple.mgmt.External.f3abfeac-1f27-4c8e-8a63-dd17555d35d9"
                serial:
                  description: The deviceʼs serial number (required).
                  type: string
                  example: "C8TJ500QF1MN"
                imei:
                  description: The device’s IMEI (omit for non-cellular devices).
                  type: string
                imei2:
                  description: The device’s secondary IMEI (omit for non-cellular and single-SIM devices).
                  type: string
                meid:
                  description: The device’s MEID (omit for non-cellular devices).
                  type: string
                productType:
                  description: "Example: iPad4,1 (required)."
                  type: string
                  example: "iPad4,1"
                escrowKey:
                  description: Dash-separated "human readable" form of the Activation Lock Bypass Code.
                  type: string
                  minLength: 31
                  example: "3UM43-PUYVY-QYD1-UVCC-HEHJ-FKA4"
                orgName:
                  description: "The client-supplied value for auditing purposes: a string that identifies the name of the organization."
                  type: string
                  example: "Acme Inc"
                guid:
                  description: "The client-supplied value for auditing purposes: a string that identifies the user requesting the removal (such as email, LDAP ID, or name)."
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Success.
        '400':
          description: "Failure: bad request; likely cause is a malformed request query or body."
        '404':
          description: "Failure: device is not found, or escrowKey is invalid."
        '500':
          description: "Unexpected server error; try again later."
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /v1/enrollments/query:
    post:
      description: "Query MDM enrollments with filtering and pagination. Supports both offset-based and cursor-based pagination via query parameters."
      security:
        - basicAuth: []
      parameters:
        - name: limit
          in: query
          description: Maximum number of enrollments to return in the response. If zero or omitted, all matching enrollments are returned.
          required: false
          schema:
            type: integer
            example: 50
        - name: offset
          in: query
          description: Offset for offset-based pagination. Use offset = 0 for the first request. Mutually exclusive with cursor-based pagination.
          required: false
          schema:
            type: integer
            example: 0
        - name: cursor
          in: query
          description: Cursor for cursor-based pagination. The first request should leave this empty. Subsequent requests should set this to the next_token value from the previous response. Mutually exclusive with offset-based pagination.
          required: false
          schema:
            type: string
            example: '74CE1CA9-8ADD-43CD-B59D-3AC0375EE25F'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentsQuery'
            example:
              filter:
                types: ['Device']
                enabled: true
              options:
                include_device_cert: false
      responses:
        '200':
          description: Success. Returns a list of enrollments matching the query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentsQueryResult'
              example:
                enrollments:
                  - id: '299BD49-1A0C-422C-B285-2E4FF087C673'
                    type: 'Device'
                    device:
                      serial_number: 'C8TJ500QF1MN'
                    enabled: true
                    token_update_tally: 12
                    last_seen: '2025-01-15T14:30:00Z'
                  - id: 'A1B2C3D4-5E6F-7G8H-9I0J-K1L2M3N4O5P6'
                    type: 'Device'
                    device:
                      serial_number: 'DNPH3X2PQ1GY'
                    enabled: true
                    token_update_tally: 8
                    last_seen: '2025-01-15T10:15:00Z'
                next_token: '74CE1CA9-8ADD-43CD-B59D-3AC0375EE25F'
        '400':
          description: "Failure: bad request; likely cause is a malformed request query or body."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentsQueryResult'
              example:
                error: "invalid request: 'NonExistentType' is not a valid enrollment type"
        '500':
          description: "Unexpected server error; try again later."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentsQueryResult'
              example:
                error: "database connection failed"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /version:
    get:
      description: Returns the running NanoMDM version
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  version:
                    type: string
                example:
                  version: "v0.1.0"
components:
  parameters:
    idParam:
      name: id*
      in: path
      description: Enrollment ID(s) of device- or user-channel enrollments. Typically a UUID-looking identifier.
      required: true
      explode: true
      style: simple
      schema:
        type: array
        items:
          type: string
        minItems: 1
        example: ['299BD49-1A0C-422C-B285-2E4FF087C673', 'E2E4A8EB-45EE-488D-B9D7-4CC3B1C40699']
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: API key is missing or invalid.
      headers:
        WWW-Authenticate:
          schema:
            type: string
    APIResultOK:
      description: All requests succeeded. Returns JSON API response object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResult'
    APIResultSomeFailed:
      description: Some requests succeeded and some failed. Returns JSON API response object including errors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResult'
    APIResultAllFailed:
      description:  All requests failed. Returns JSON API response object including errors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResult'
    QueueAPIResultSomeFailed:
      description: Some requests succeeded and some failed. Returns JSON queue API response object including errors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueueAPIResult'
    QueueAPIResultAllFailed:
      description: All requests failed. Returns JSON queue API response object including errors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueueAPIResult'
  schemas:
    APIResult:
      type: object
      description: foo
      properties:
        no_push:
          type: boolean
          default: false
        push_error:
          type: string
        command_error:
          type: string
        command_uuid:
          type: string
          example: 'c7fc0872-f22f-4823-8ae0-f3d0174fb48a'
          format: uuid
        request_type:
          type: string
        status:
          type: object
          properties:
            $id:
              type: object
              properties:
                push_error:
                  type: string
                push_result:
                  type: string
                  format: uuid
                  example: '6E14E52F-7F07-42C7-8367-4D81441DC85F'
                  description: Push UUID from Apple Push Notification service servers.
                command_error:
                  type: string
    PushCertResponse:
      type: object
      properties:
        error:
          description: Error response string.
          type: string
        topic:
          type: string
          description: The "topic" (UID attribute) from the uploaded APNs certificate.
          example: 'com.apple.mgmt.External.e3b8ceac-1f18-2c8e-8a63-dd17d99435d9'
        not_after:
          type: string
          format: date-time
          description: Expiration date of the uploaded APNs certificate.
          example: '2026-01-07T04:04:46Z'
    EnrollmentsQuery:
      type: object
      description: Query for MDM enrollments. All fields are optional.
      properties:
        filter:
          $ref: '#/components/schemas/EnrollmentsQueryFilter'
        options:
          $ref: '#/components/schemas/EnrollmentQueryOptions'
    EnrollmentsQueryFilter:
      type: object
      description: |
        Filter for enrollments. All query parameters are optional.
        If multiple parameters are provided, they are combined with logical AND.
        e.g. if both types and serials are provided, only enrollments matching both criteria are returned.
      properties:
        ids:
          type: array
          items:
            type: string
          description: Returns only enrollments matching the given enrollment IDs.
          example: ['299BD49-1A0C-422C-B285-2E4FF087C673']
        serials:
          type: array
          items:
            type: string
          description: Returns only enrollments matching the given serial numbers.
          example: ['C8TJ500QF1MN']
        user_short_names:
          type: array
          items:
            type: string
          description: Returns only enrollments matching the given user short names.
          example: ['jane_smith', 'john_doe']
        types:
          type: array
          items:
            type: string
            enum: ['Device', 'User', 'User Enrollment (Device)', 'User Enrollment', 'Shared iPad']
          description: Filters enrollments by their enrollment types.
          example: ['Device', 'User Enrollment (Device)']
        enabled:
          type: boolean
          description: Filters enrollments by their enabled/disabled status. If omitted, both enabled and disabled enrollments are returned.
          example: true
    EnrollmentQueryOptions:
      type: object
      description: Options for enrollment query results.
      properties:
        include_device_cert:
          type: boolean
          description: By default, the Device Identity certificate is not included in the response. Set to true to include it.
          default: false
          example: false
    EnrollmentsQueryResult:
      type: object
      description: Response containing a list of enrollments and pagination information.
      properties:
        enrollments:
          type: array
          items:
            $ref: '#/components/schemas/Enrollment'
          description: List of enrollments matching the query.
        next_token:
          type: string
          description: Cursor for pagination. If non-empty, more results may be fetched by setting this value in the next_token field of a subsequent request. Clients should not depend on a particular format of this token.
          example: '74CE1CA9-8ADD-43CD-B59D-3AC0375EE25F'
        error:
          type: string
          description: Error message if there was an error processing the request.
    Enrollment:
      type: object
      description: Represents an MDM enrollment (device or user channel).
      properties:
        id:
          type: string
          description: The NanoMDM enrollment ID
          example: '299BD49-1A0C-422C-B285-2E4FF087C673'
        type:
          type: string
          enum: ['Device', 'User', 'User Enrollment (Device)', 'User Enrollment', 'Shared iPad']
          description: Type of the enrollment. This value may be empty if the server has not receieved a TokenUpdate from this enrollment yet.
          example: 'Device'
        device:
          $ref: '#/components/schemas/DeviceEnrollment'
          description: Device information (present for device channel enrollments).
        user:
          $ref: '#/components/schemas/UserEnrollment'
          description: User information (present for user channel enrollments).
        enabled:
          type: boolean
          description: Indicates if the enrollment is active.
          example: true
        token_update_tally:
          type: integer
          description: Number of TokenUpdate messages received for this enrollment.
          example: 5
        last_seen:
          type: string
          format: date-time
          description: Time of the last request from this enrollment.
          example: '2025-01-15T14:30:00Z'
      required:
        - id
        - enabled
        - token_update_tally
        - last_seen
    DeviceEnrollment:
      type: object
      description: Device-specific enrollment information.
      properties:
        serial_number:
          type: string
          description: Device serial number.
          example: 'C8TJ500QF1MN'
      required:
        - serial_number
    UserEnrollment:
      type: object
      description: User-specific enrollment information.
      properties:
        user_short_name:
          type: string
          description: For macOS, this value is the short name of the user. For Shared iPad, this value is the Managed Apple Account identifier of the user on Shared iPad.
          example: 'jane_smith'
        user_long_name:
          type: string
          description: Full name of the user.
          example: 'Jane Smith'
    QueuedCommandsResponse:
      type: object
      properties:
        commands:
          type: array
          description: Array of queued MDM commands
          items:
            type: object
            properties:
              command_uuid:
                type: string
                format: uuid
                example: 'fedd659e-fc3c-4e35-8bb1-c8f51ae542a5'
              request_type:
                type: string
                example: 'ProfileList'
              command:
                type: string
                format: byte
                description: The full MDM command plist data, base64-encoded.
                example: |-
                  PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHBsaXN0IFBVQkxJQyAiLS8vQXBwbGUvL0RURCBQTElTVCAxLjAvL0VOIiAiaHR0cDovL3d3dy5hcHBsZS5jb20vRFREcy9Qcm9wZXJ0eUxpc3QtMS4wLmR0ZCI+CjxwbGlzdCB2ZXJzaW9uPSIxLjAiPgo8ZGljdD4KPGtleT5Db21tYW5kPC9rZXk+CjxkaWN0PgogICAgPGtleT5SZXF1ZXN0VHlwZTwva2V5PgogICAgPHN0cmluZz5Qcm9maWxlTGlzdDwvc3RyaW5nPgo8L2RpY3Q+CjxrZXk+Q29tbWFuZFVVSUQ8L2tleT4KPHN0cmluZz5mZWRkNjU5ZS1mYzNjLTRlMzUtOGJiMS1jOGY1MWFlNTQyYTU8L3N0cmluZz4KPC9kaWN0Pgo8L3BsaXN0Pg==
        next_cursor:
          type: string
          description: Cursor for retrieving the next page of results. Empty if no more results available.
    QueueAPIResult:
      type: object
      description: Result of queue API operations
      properties:
        status:
          type: object
          description: Per-enrollment ID error status. Map key is the enrollment ID.
          properties:
            $id:
              type: string
              description: Error message for this enrollment ID
          example:
            '299BD49-1A0C-422C-B285-2E4FF087C673': 'queue not found'
            'E2E4A8EB-45EE-488D-B9D7-4CC3B1C40699': 'database error'
        error:
          type: string
